-- Function: registro_sac_sap(numeric, numeric, numeric)

-- DROP FUNCTION registro_sac_sap(numeric, numeric, numeric);

CREATE OR REPLACE FUNCTION registro_sac_sap(numeric, numeric, numeric)
  RETURNS character varying AS
$BODY$
DECLARE        
       resultado varchar;
       estadoPrueba28 varchar;
       esResistencia28Dias integer := 0;
       otrasPruebasEstadoNOC integer := 0;
       otrasPruebasEstadoCON integer := 0;
       otrasPruebas          integer := 0;
       idLote numeric(10,0); 
       
 BEGIN   

    SELECT existeResistenciaCompresion28Dias($2) INTO esResistencia28Dias;

    SELECT COUNT(*) contadorEstadoNOC FROM  "CPSAA"."GESAC_MOV_ENSA"
				      WHERE "SCMOM_IDE_MUES_K" = $2
				      AND   "SCMOE_COC_EST_TRA" = 'NOC' INTO otrasPruebasEstadoNOC;
    SELECT COUNT(*) contadorEstadoNOC FROM  "CPSAA"."GESAC_MOV_ENSA"
				      WHERE "SCMOM_IDE_MUES_K" = $2
				      AND   "SCMOE_COC_EST_TRA" = 'CON' INTO otrasPruebasEstadoCON;	
    IF(esResistencia28Dias=1) THEN
     SELECT 'NOC' INTO estadoPrueba28;
    ELSIF(esResistencia28Dias=2) THEN
     SELECT 'CON' INTO estadoPrueba28;
    END IF;

    IF(otrasPruebasEstadoNOC>0) THEN
      SELECT estadoPrueba28||'-NOC' INTO resultado;
    ELSIF(otrasPruebasEstadoCON>0)  THEN
      SELECT estadoPrueba28||'-CON' INTO resultado;
    ELSE
      SELECT estadoPrueba28||'-0' INTO resultado;
    END IF;		      


  
  RETURN resultado;     
           
 END;
 $BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION registro_sac_sap(numeric, numeric, numeric) OWNER TO postgres;





*********************************************************************

-- Function: nombretipoensayoesresistenciacompresion28dias(character varying)

-- DROP FUNCTION nombretipoensayoesresistenciacompresion28dias(character varying);

CREATE OR REPLACE FUNCTION nombretipoensayoesresistenciacompresion28dias(character varying)
  RETURNS integer AS
$BODY$

/**********************************************
FECHA		: 21-03-2012
DESCRIPCION	: VALIDA SI EL NOMBRE TIPO ENSAYO QUE SE PASA COMO PARAMETRO CONTIENE LAS PALABRAS: RESISTENCIA, COMPRESIÓN o COMPRESION Y 28
DEVUELVE	: 1 = SI CUMPLE 
		  2 = NO CUMPLE		  
AUTOR		: DVQ
**********************************************/

DECLARE
	resultado integer := 0;
	posicion integer := 0;
	nombreTipoEnsayo character varying(100);
    BEGIN
	nombreTipoEnsayo := $1;
	
	select position('RESISTENCIA' in upper(nombreTipoEnsayo)) into posicion;	
	IF(posicion > 0) THEN		
		select position('COMPRESIÓN' in upper(nombreTipoEnsayo)) into posicion;
		IF(posicion > 0) THEN 
			select position('28' in upper(nombreTipoEnsayo)) into posicion;
			IF(posicion > 0) THEN
				resultado := 1;
			ELSE
				resultado := 0;
			END IF;
		ELSE
			select position('COMPRESION' in upper(nombreTipoEnsayo)) into posicion;	
			IF(posicion > 0) THEN 
				select position('28' in upper(nombreTipoEnsayo)) into posicion;
				IF(posicion > 0) THEN
					resultado := 1;
				ELSE
					resultado := 0;
				END IF;
			ELSE
				resultado := 0;
			END IF;	
		END IF;
		
	ELSE
		resultado := 0;
	END IF;
	
	return resultado;
    END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION nombretipoensayoesresistenciacompresion28dias(character varying) OWNER TO postgres;


**********************************************************************

-- Function: loteeliminadonoenviado(numeric, character varying, character)

-- DROP FUNCTION loteeliminadonoenviado(numeric, character varying, character);

CREATE OR REPLACE FUNCTION loteeliminadonoenviado(numeric, character varying, character)
  RETURNS character varying AS
$BODY$
DECLARE        
       CANTIDAD varchar;
 BEGIN     

   INSERT INTO  "CPSAA"."GESAC_AUX_ERROR_SAC_SAP"  ("SCMOL_IDE_LOTE_K", "SCMAP_IDE_PLAN_K",  "SCMPR_IDE_PROD_K", "SCMOL_COC_COL_PROD", "SCMTU_IDE_TURN_K",
   "SCMOL_FCH_HOR_REG",  "SCMOL_FCH_HOR_INI_PRO", "SCMOL_FCH_HOR_FIN_PRO", "SCMOL_COC_EST",
   "SCMOL_VLR_TAM", "SCMOL_COC_UNI_MED_TAM", "SCMOL_GLS_DOS", "SCMOL_GLS_DES", "SCMOL_GLS_CLIENTE",
   "SCMOL_GLS_OBRA", "SCMOL_GLS_ESTRUCTURA", "SCMOL_GLS_NRO_REMITO_BOLETA", "SCMOL_FLAG_ENVIADO","SCD_IDE_ERROR_DESCRIPCION","SCD_ACCION")
   SELECT "SCMOL_IDE_LOTE_K", "SCMAP_IDE_PLAN_K",  "SCMPR_IDE_PROD_K", "SCMOL_COC_COL_PROD", "SCMTU_IDE_TURN_K",
	    "SCMOL_FCH_HOR_REG",  "SCMOL_FCH_HOR_INI_PRO", "SCMOL_FCH_HOR_FIN_PRO", "SCMOL_COC_EST",
		"SCMOL_VLR_TAM", "SCMOL_COC_UNI_MED_TAM", "SCMOL_GLS_DOS", "SCMOL_GLS_DES", "SCMOL_GLS_CLIENTE",
	    "SCMOL_GLS_OBRA", "SCMOL_GLS_ESTRUCTURA", "SCMOL_GLS_NRO_REMITO_BOLETA", "SCMOL_FLAG_ENVIADO",$2,$3
	    FROM "CPSAA"."GESAC_MOV_LOTE"
	    WHERE "SCMOL_IDE_LOTE_K"=$1;

  

  RETURN CANTIDAD;     
           
 END;
 $BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION loteeliminadonoenviado(numeric, character varying, character) OWNER TO postgres;




*************************************************

-- Function: existeresistenciacompresion28dias(numeric)

-- DROP FUNCTION existeresistenciacompresion28dias(numeric);

CREATE OR REPLACE FUNCTION existeresistenciacompresion28dias(numeric)
  RETURNS integer AS
$BODY$	
/**********************************************
FECHA		: 23-03-2012
DESCRIPCION	: BUSCA EN TODOS LOS ENSAYOS QUE PERTENECEN A UNA MUESTRA SI EXISTE ENTRE ELLOS UN ENSAYO QUE TENGA
		  COMO NOMBRE TIPO ENSAYO = RESISTENCIA COMPRESION 28 DIAS Y VALIDA SU ESTADO
DEVUELVE	: 1 = SI EXISTE UN ENSAYO CON NOMBRE TIPO DE ENSAYO RESISTENCIA COMPRESION 28 DIAS Y SU ESTADO ES = 'NOC'
		  2 = SI EXISTE UN ENSAYO CON NOMBRE TIPO DE ENSAYO RESISTENCIA COMPRESION 28 DIAS Y SU ESTADO ES != 'NOC'
		  0 = SI NO EXISTE ENSAYO CON NOMBRE TIPO DE ENSAYO RESISTENCIA COMPRESION 28 DIAS
AUTOR		: DVQ
**********************************************/

	DECLARE 
	resultado integer := 0;
	estadoEnsayo character varying(3);
	esResistencia28Dias integer := 0;
	nombreTipoEnsayo character varying(100); 
	
	micursor CURSOR FOR SELECT 
					MAE."SCMTE_NOM_TIPO_ENSA", MOV."SCMOE_COC_EST_TRA"
					--, MAE."SCMTE_NOM_TIPO_ENSA", MOV."SCMOE_COC_EST_TRA"
				FROM
					"CPSAA"."GESAC_MOV_ENSA" MOV INNER JOIN
					"CPSAA"."GESAC_MAE_TIPO_ENSA" MAE ON
					MOV."SCMTE_IDE_TIPO_ENSA_K" = MAE."SCMTE_IDE_TIPO_ENSA_K"
				WHERE
					MOV."SCMOM_IDE_MUES_K" = $1;

	
				
	BEGIN
		OPEN micursor;
		LOOP			
			FETCH NEXT IN micursor INTO nombreTipoEnsayo, estadoEnsayo;
			EXIT WHEN NOT FOUND;

			--FUNCION QUE VALIDA SI EL NOMBRETIPOENSAYO ES RESISTENCIA COMPRESION 28 DIAS (1= ES RESISTENCIA COMPRESION 28 DIAS, 0 = NO ES)
			select nombreTipoEnsayoEsResistenciaCompresion28Dias(nombreTipoEnsayo) INTO esResistencia28Dias;
			
			IF(esResistencia28Dias = 1) THEN
				IF(estadoEnsayo = 'NOC') THEN
					resultado := 1;
				ELSIF(estadoEnsayo = 'CON') THEN
					resultado := 2;
				END IF;
				
				EXIT;
			END IF;			
		END LOOP;
		CLOSE micursor;
		return resultado;
	END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION existeresistenciacompresion28dias(numeric) OWNER TO postgres;



***************************************************************


-- Function: enviar_lotes_prefabricados_sap(numeric, numeric, numeric, timestamp without time zone, timestamp without time zone, numeric, numeric, numeric, character, numeric, numeric)

-- DROP FUNCTION enviar_lotes_prefabricados_sap(numeric, numeric, numeric, timestamp without time zone, timestamp without time zone, numeric, numeric, numeric, character, numeric, numeric);

CREATE OR REPLACE FUNCTION enviar_lotes_prefabricados_sap(numeric, numeric, numeric, timestamp without time zone, timestamp without time zone, numeric, numeric, numeric, character, numeric, numeric)
  RETURNS character varying AS
$BODY$
DECLARE        
       CANTIDAD varchar;
 BEGIN   

  SELECT INTO CANTIDAD 	(SELECT
			ML."SCMOL_IDE_LOTE_K" as id,
			MP."SCMPR_NOM_PROD"  as "producto.nombre",
			ML."SCMOL_FCH_HOR_INI_PRO" as fechaInicioProduccion,
			MT."SCMTU_NOM_TURN" as "turno.nombre",
			ML."SCMOL_VLR_TAM" as tamano,
			ML."SCMOL_COC_UNI_MED_TAM" as codigoUnidadMedida,
			ML."SCMOL_COC_EST" as codigoEstado,
			ML."SCMOL_COC_COL_PROD" as codigoColor,
			ML."SCMOL_GLS_DES" as descripcion,
			ML."SCMOL_FCH_HOR_REG" as fechaRegistro,
			PL."SCMAP_IDE_PLAN_K" as "planta.id",
			EM."SCMAE_IDE_EMPR_K" as "planta.empresa.id",
                        ML."SCMOL_GLS_CLIENTE" as cliente,
			ML."SCMOL_GLS_OBRA" as obra,
			ML."SCMOL_GLS_ESTRUCTURA" as estructura,
			ML."SCMOL_GLS_NRO_REMITO_BOLETA" as nroRemitoBoletaDespacho,
			NE."SCMAN_IDE_NEGO_K" as "producto.lineaProducto.negocio.id"
							
		FROM
			"CPSAA"."GESAC_MOV_LOTE" ML,
			"CPSAA"."GESAC_MAE_TURN" MT,
			"CPSAA"."GESAC_MAE_PROD" MP,
			"CPSAA"."GESAC_MAE_EMPR" EM ,
			"CPSAA"."GESAC_MAE_LINE_PROD" LP ,
			"CPSAA"."GESAC_MAE_PLAN" PL,
			"CPSAA"."GESAC_MAE_NEGO" NE
			
		WHERE
		
		        MP."SCMPR_COC_EST"='ACT' 
		        AND ML."SCMTU_IDE_TURN_K" = MT."SCMTU_IDE_TURN_K"
			AND ML."SCMPR_IDE_PROD_K" = MP."SCMPR_IDE_PROD_K"
			AND MP."SCMLP_IDE_LINE_PROD_K" = LP."SCMLP_IDE_LINE_PROD_K"
			AND ML."SCMAP_IDE_PLAN_K"= PL."SCMAP_IDE_PLAN_K" 
			AND PL."SCMAE_IDE_EMPR_K"=EM."SCMAE_IDE_EMPR_K"
			AND NE."SCMAN_IDE_NEGO_K"=LP."SCMAN_IDE_NEGO_K"			
			AND ML."SCMOL_IDE_LOTE_K" = $1
			AND EM."SCMAE_IDE_EMPR_K" = $2
			AND ML."SCMAP_IDE_PLAN_K" = $3
			AND to_date(to_char(ML."SCMOL_FCH_HOR_INI_PRO", 'yyyy/mm/dd'), 'yyyy/mm/dd') >= $4
			AND to_date(to_char(ML."SCMOL_FCH_HOR_INI_PRO", 'yyyy/mm/dd'), 'yyyy/mm/dd') <= $5
			AND ML."SCMPR_IDE_PROD_K" = $6
			AND LP."SCMLP_IDE_LINE_PROD_K" = $7
			AND ML."SCMTU_IDE_TURN_K" = $8
			AND ML."SCMOL_COC_EST" = $9

		ORDER BY 
			ML."SCMOL_FCH_HOR_INI_PRO" DESC
		LIMIT
			$10
		OFFSET
			$11);	


  

  
  RETURN CANTIDAD;     
           
 END;
 $BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION enviar_lotes_prefabricados_sap(numeric, numeric, numeric, timestamp without time zone, timestamp without time zone, numeric, numeric, numeric, character, numeric, numeric) OWNER TO postgres;






**********************************************************


-- Table: "CPSAA"."GESAC_AUX_ERROR_SAC_SAP"

-- DROP TABLE "CPSAA"."GESAC_AUX_ERROR_SAC_SAP";

CREATE TABLE "CPSAA"."GESAC_AUX_ERROR_SAC_SAP"
(
  "SCDA_IDE_ERROR" SERIAL,
  "SCD_IDE_ERROR_DESCRIPCION" character varying(500),
  "SCMOL_IDE_LOTE_K" numeric(10,0),
  "SCD_ACCION" character(3),
  "SCMAP_IDE_PLAN_K" numeric(10,0),
  "SCMPR_IDE_PROD_K" numeric(10,0),
  "SCMOL_COC_COL_PROD" character varying(3),
  "SCMTU_IDE_TURN_K" numeric(10,0),
  "SCMOL_COC_EST" character varying(3),
  "SCMOL_VLR_TAM" numeric(10,2),
  "SCMOL_COC_UNI_MED_TAM" character varying(3),
  "SCMOL_GLS_DOS" character varying(500),
  "SCMOL_GLS_DES" character varying(500),
  "SCMOL_GLS_CLIENTE" character varying(500),
  "SCMOL_GLS_OBRA" character varying(500),
  "SCMOL_GLS_NRO_REMITO_BOLETA" character varying(500),
  "SCMOL_FLAG_ENVIADO" numeric,
  "SCMOL_FCH_HOR_REG" timestamp without time zone,
  "SCMOL_FCH_HOR_INI_PRO" timestamp without time zone,
  "SCMOL_FCH_HOR_FIN_PRO" timestamp without time zone,
  "SCMOL_GLS_ESTRUCTURA" character varying(500),
  CONSTRAINT "PK_SCDA_IDE_ERROR" PRIMARY KEY ("SCDA_IDE_ERROR")
)
WITH (
  OIDS=FALSE
);
ALTER TABLE "CPSAA"."GESAC_AUX_ERROR_SAC_SAP" OWNER TO postgres;




*****************************************************



ALTER TABLE "CPSAA"."GESAC_MOV_LOTE" ADD COLUMN "SCMOL_FLAG_ENVIADO" numeric;
ALTER TABLE "CPSAA"."GESAC_MOV_LOTE" ALTER COLUMN "SCMOL_FLAG_ENVIADO" SET DEFAULT 0;


****************************************************


ALTER TABLE "CPSAA"."GESAC_MOV_LOTE" ADD COLUMN "SCMOL_FLAG_ENVIADO" numeric;
ALTER TABLE "CPSAA"."GESAC_MOV_LOTE" ALTER COLUMN "SCMOL_FLAG_ENVIADO" SET DEFAULT 0;

****************************************************


-- Column: "SCMPR_COD_MATERIAL_SAP"

-- ALTER TABLE "CPSAA"."GESAC_MAE_PROD" DROP COLUMN "SCMPR_COD_MATERIAL_SAP";

ALTER TABLE "CPSAA"."GESAC_MAE_PROD" ADD COLUMN "SCMPR_COD_MATERIAL_SAP" character varying(10);



*****************************************************

ALTER TABLE "CPSAA"."GESAC_MAE_PLAN" ADD COLUMN "SCMAP_COC_EST" character varying(3);

*****************************************************

ALTER TABLE "CPSAA"."GESAC_MAE_PLAN" ADD COLUMN "SCMAP_COD_CENTRO" character varying(10);


*************************************************

ALTER TABLE "CPSAA"."GESAC_MAE_PLAN" ADD COLUMN "SCMAP_COD_ALMACEN" character varying(10);


**********************************************

ALTER TABLE "CPSAA"."GESAC_MAE_PLAN" ADD COLUMN "SCMAP_COD_INPUTACION" character varying(10);


*******************************************

UPDATE "CPSAA"."GESAC_MAE_PLAN"
SET "SCMAP_COD_CENTRO"=1205, "SCMAP_COD_ALMACEN"=1267, "SCMAP_COD_INPUTACION"=51401 
WHERE "SCMAP_IDE_PLAN_K" = 2;

UPDATE "CPSAA"."GESAC_MAE_PLAN"
SET "SCMAP_COD_CENTRO"=1211, "SCMAP_COD_ALMACEN"=1267, "SCMAP_COD_INPUTACION"=51401 
WHERE "SCMAP_IDE_PLAN_K" = 5;

UPDATE "CPSAA"."GESAC_MAE_PLAN"
SET "SCMAP_COD_CENTRO"=1213, "SCMAP_COD_ALMACEN"=1267, "SCMAP_COD_INPUTACION"=51401 
WHERE "SCMAP_IDE_PLAN_K" = 6;
 
 
 
 SELECT * FROM "CPSAA"."GESAC_MAE_PROD" WHERE "SCMPR_NOM_PROD" LIKE '%Pared 12 TMS%';
 SELECT * FROM "CPSAA"."GESAC_MAE_PROD" WHERE "SCMPR_NOM_PROD" LIKE '%Pared 14 TMS%';
 SELECT * FROM "CPSAA"."GESAC_MAE_PROD" WHERE "SCMPR_NOM_PROD" LIKE '%Adoquín 6 TMS%';
 SELECT * FROM "CPSAA"."GESAC_MAE_PROD" WHERE "SCMPR_NOM_PROD" LIKE '%Adoquín 8 TMS%';
 SELECT * FROM "CPSAA"."GESAC_MAE_PROD" WHERE "SCMPR_NOM_PROD" LIKE '%Adoquín 4 TMS%';
 SELECT * FROM "CPSAA"."GESAC_MAE_PROD" WHERE "SCMPR_NOM_PROD" LIKE '%Pared 9 TMS%';
 
  
 UPDATE "CPSAA"."GESAC_MAE_PROD" SET "SCMPR_COD_MATERIAL_SAP" = '004-00058' WHERE "SCMPR_NOM_PROD" = 'Pared 12 TMS';

 UPDATE "CPSAA"."GESAC_MAE_PROD" SET "SCMPR_COD_MATERIAL_SAP" = '004-00059' WHERE "SCMPR_NOM_PROD" = 'Pared 14 TMS';

 UPDATE "CPSAA"."GESAC_MAE_PROD" SET "SCMPR_COD_MATERIAL_SAP" = '004-00070' WHERE "SCMPR_NOM_PROD" = 'Adoquín 6 TMS';

 UPDATE "CPSAA"."GESAC_MAE_PROD" SET "SCMPR_COD_MATERIAL_SAP" = '004-00077' WHERE "SCMPR_NOM_PROD" = 'Adoquín 8 TMS';

 UPDATE "CPSAA"."GESAC_MAE_PROD" SET "SCMPR_COD_MATERIAL_SAP" = '004-00147' WHERE "SCMPR_NOM_PROD" = 'Pared 9 TMS'; 

 UPDATE "CPSAA"."GESAC_MAE_PROD" SET "SCMPR_COD_MATERIAL_SAP" = '004-00213' WHERE "SCMPR_NOM_PROD" = 'Adoquín 4 TMS';